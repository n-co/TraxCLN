open a terminal and run the following command in order to bridge between local machine and lvs gateway:
    ssh -Y -L 2224:lab1105f:22 nirse@lvs.cs.bgu.ac.il
this terminal must stay opened.
for testing purposes only, open a new terminal.
    ssh -Y -p 2224 nirse@localhost
open pycharm
configuring remote interpreter:
    file>settings>project>project interpreter>Gear Button>Add Remote>SSH Credentials:
        host: localhost
        port: 2224
        user name: nirse
        password:
        python interpreter path: /users/studs/bsc/2015/nirse/Programs/anaconda2/bin/python2.7
        can also be /opt/anaconda2/bin/python2.7
configuring deployment connection:
    tools->deployment>configuring>+ button
        name: TraxCLNPersonalNir
        type: SFTP.
        host: localhost.
        port: 2224
        root path: clicking on autodetect will give you: /users/studs/bsc/2015/nirse. we should just place "/". 
        (old, igonre this) go to mapping tabs. set project root path to: /WorkSpace/Trax/TraxCLN (note root is defined as home, so you
        are ok).
        go to mapping tabs. set project root path to: /vildata/code/Trax/proj_nir_noam
deploying:
    tools->deployment>browse. if tree is not opened because no credentials are set, click on the button and set them.
    tools->deployment>upload
running code: deploy and play.
running code prepare traxdata until envorionment is fixed: can be done using play for know.
running code network: until environment is fixed:
tools->start SSH session->TraxCLNPersonalNir
setenv PATH ~/Programs/anaconda2/bin\:$PATH
setenv LD_LIBRARY_PATH /usr/local/cuda-8.0/lib64\:$LD_LIBRARY_PATH
setenv PATH /usr/local/cuda-8.0/bin\:$PATH  
cd /vildata/code/Trax/proj_nir_noam/CLN/mini_batch/
running pubmed:
    python training.py -model Highway -data pubmed -dim 40 -nlayers 10 -nmean 2 -batch 256 -saving pubmed -batchtype context -flatmethod f
running trax context:  = freeze = mini batch
    python training.py -model HCNN -data trax -dim 40 -nlayers 10 -nmean 2 -batch 256 -saving trax -batchtype context -flatmethod c
running trax relation: = full batch
    python training.py -model HCNN -data trax_100_300 -dim 400 -nlayers 10 -nmean 2 -batch 5 -saving trax -batchtype relation -flatmethod c


running trax folder
    python training.py -model HCNN -data trax_100_300 -dim 400 -nlayers 10 -nmean 2 -batch 5 -saving trax -batchtype relation -flatmethod c


screen commands


nohup command:
    similar to screen, runs a program even when you close the session
    nohup <command> <arguments>  >  log.txt &
    > log.txt  -  writes the output to a file
    &          - runs in background

tail command:
    shows last lines of a file
    tail -n 15 -f log.txt
    -n <number> - takes the last <number> lines of the file (default is 10)
    -f          - continue to print more lines when file is still being writen